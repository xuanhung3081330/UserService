// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmallProject.UserService.Infrastructure.EFCore;

namespace SmallProject.UserService.Infrastructure.Migrations
{
    [DbContext(typeof(UserDbContext))]
    [Migration("20210117021212_AddIsDeletedPropertyToRetailer")]
    partial class AddIsDeletedPropertyToRetailer
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SmallProject.UserService.Domain.Aggregates.Retailer.Retailer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Retailers");
                });

            modelBuilder.Entity("SmallProject.UserService.Domain.Aggregates.Retailer.Retailer", b =>
                {
                    b.OwnsOne("SmallProject.UserService.Domain.Aggregates.Retailer.Address", "Address", b1 =>
                        {
                            b1.Property<int>("RetailerId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("District")
                                .HasColumnName("District")
                                .HasColumnType("text");

                            b1.Property<int>("HouseNum")
                                .HasColumnName("HouseNum")
                                .HasColumnType("int");

                            b1.Property<string>("Street")
                                .HasColumnName("Street")
                                .HasColumnType("text");

                            b1.Property<string>("Ward")
                                .HasColumnName("Ward")
                                .HasColumnType("text");

                            b1.HasKey("RetailerId");

                            b1.ToTable("Retailers");

                            b1.WithOwner()
                                .HasForeignKey("RetailerId");
                        });

                    b.OwnsOne("SmallProject.UserService.Domain.Aggregates.Retailer.Name", "Name", b1 =>
                        {
                            b1.Property<int>("RetailerId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("FirstName")
                                .HasColumnName("FirstName")
                                .HasColumnType("text");

                            b1.Property<string>("LastName")
                                .HasColumnName("LastName")
                                .HasColumnType("text");

                            b1.HasKey("RetailerId");

                            b1.ToTable("Retailers");

                            b1.WithOwner()
                                .HasForeignKey("RetailerId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
